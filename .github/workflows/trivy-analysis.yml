# This workflow is used to build & scan image using trivy vulnerability scanner and upload the results to github security tab

name: Build & Vulnerability Scan using Trivy Scanner

on:
  push:
    branches: [ main, release/*]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main, release/*]
  workflow_dispatch:
    branches: [ main, release/*]

jobs:
  build-scan-image:
    name: Build & Scan Image
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Set up JDK build environment
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
        
      - name: Maven Verify
        run: mvn -ntp clean verify

      - name: Build an image from Dockerfile
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
        run: |
          docker build -t docker.io/testtrivy/testtrivy:${{ github.sha }} .          

      #Run Vulnerability Scan usinig Trivy scanner
      - name: Run Trivy vulnerability scanner for cmsint-pac-extractor
        uses: aquasecurity/trivy-action@0.19.0
        with:
          scan-type: image
          image-ref: docker.io/testtrivy/testtrivy:${{ github.sha }}
          severity: 'HIGH,CRITICAL'
          exit-code: '1'
          format: 'sarif'
          limit-severities-for-sarif: true
          output: 'trivy-results.sarif'          

      #Upload results to the Github security tab.
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: trivy-results.sarif
